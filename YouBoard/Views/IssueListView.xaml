<UserControl
    x:Class="YouBoard.Views.IssueListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:YouBoard.Models"
    xmlns:viewModels="clr-namespace:YouBoard.ViewModels"
    d:DataContext="{d:DesignInstance viewModels:DesignIssueListViewModel}"
    d:DesignHeight="300"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid Background="{StaticResource DarkBgBrush}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <ListBox
            HorizontalContentAlignment="Stretch"
            AlternationCount="2"
            ItemsSource="{Binding IssueWrappers}"
            SelectedItem="{Binding SelectedItem}">
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type models:IssueWrapper}">
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{StaticResource LightFgBrush}" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal">

                            <CheckBox
                                Width="20"
                                Foreground="Aqua"
                                IsChecked="{Binding IsComplete}">

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.MarkAsCompleteIssueCommand}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                            </CheckBox>
                            <Button
                                Width="25"
                                Height="18"
                                Margin="8,0"
                                Padding="5,0"
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.ToggleIssueStateCommandAsync}"
                                CommandParameter="{Binding}">

                                <Button.Style>
                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WorkTimer.IsRunning}" Value="True">
                                                <Setter Property="Background" Value="Orange" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>

                                <Button.Content>
                                    <TextBlock FontSize="12">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding WorkTimer.IsRunning}" Value="True">
                                                        <Setter Property="Text" Value="❚❚" />
                                                    </DataTrigger>

                                                    <DataTrigger Binding="{Binding WorkTimer.IsRunning}" Value="False">
                                                        <Setter Property="Text" Value="▶" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Button.Content>
                            </Button>

                            <TextBlock Width="70" Text="{Binding State}" />

                            <TextBlock Width="65">
                                <TextBlock.Style>
                                    <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding WorkTimer.IsRunning}" Value="True">
                                                <Setter Property="Text" Value="{Binding WorkTimer.Elapsed, Converter={StaticResource TimeSpanToStringConverter}}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding WorkTimer.IsRunning}" Value="False">
                                                <Setter Property="Text" Value="" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                        </StackPanel>

                        <TextBlock Grid.Column="1" Text="{Binding Title}" />

                        <TextBlock
                            Grid.Column="3"
                            MinWidth="40"
                            Text="{Binding Id}" />
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ItemContainerStyle>
                <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="ListBoxItem">
                    <Setter Property="Opacity" Value="0" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Style.Triggers>

                        <!--  デザイン時は Opacity = 1  -->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListBox}, Path=DataContext.IsDesignInstance}" Value="True">
                            <Setter Property="Opacity" Value="1" />
                        </DataTrigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="{StaticResource DarkBgBrush}" />
                        </Trigger>

                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{StaticResource MediumBgBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource LightFgBrush}" />
                        </Trigger>

                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetProperty="Opacity"
                                        From="0"
                                        To="1"
                                        Duration="0:0:0.3" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <StackPanel Grid.Row="1" Margin="5">
            <StackPanel.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Style>
                <Style BasedOn="{StaticResource MaterialDesignTextBox}" TargetType="TextBox">
                    <Setter Property="Foreground" Value="WhiteSmoke" />
                </Style>
            </StackPanel.Resources>
            <DockPanel>
                <TextBlock Width="80" Text="Title :" />
                <TextBox Margin="3,0" Text="{Binding PendingIssue.Title}" />
            </DockPanel>

            <Border Margin="0,2" />

            <DockPanel>
                <TextBlock Width="80" Text="Description :" />
                <TextBox Margin="3,0" Text="{Binding PendingIssue.Description}" />
            </DockPanel>

            <Border Margin="0,2" />

            <Button
                Width="120"
                Margin="3,0"
                HorizontalAlignment="Right"
                Command="{Binding CreateIssueCommand}"
                Content="Create Issue" />
        </StackPanel>

    </Grid>
</UserControl>